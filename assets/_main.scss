html {
  font-size: $font-size-base;
  scroll-behavior: smooth;
  touch-action: manipulation;
}

body {
  min-width: $body-min-width;
  color: var(--body-content);
  background: var(--body-background);

  font-weight: $body-font-weight;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;

  * {
    @extend .transition-color;
  }
}

h1,
h2,
h3,
h4,
h5 {
  font-weight: $body-font-weight;
}

a, a:link {
  text-decoration: none;
  color: var(--color-link);
  position: relative;
  @extend .transition;
  
}
a:hover {
  color: var(--accent-hover);
  cursor: cursor;
}
a, a:hover, a:active, a:focus {
  text-decoration: none;
  outline: none;
}

#navbar a:hover,footer#site-footer a:hover {
  top: 0;
}

img {
  vertical-align: baseline;
}

:focus {
  @include outline;
}

@mixin ul-reset {
  padding: 0;
  margin: 0;
  list-style: none;
}

body {
  .container {
    max-width: $container-max-width;
    margin: 0 auto;
    &.full {
      padding: 0 auto;
      margin: 0 auto;
    }
  }
  &.full .container, .full .container {
    max-width: unset;
  }
}

html, body {
  scroll-padding-top: $navbar-item-height + $as-sm + $as-sm + $as-lg;
}

main {
  color: var(--body-content);
  padding-top: $navbar-item-height + $as-sm + $as-sm;
  .container {
    padding: $as-md $as-lg;
    @media (max-width: $mobile-breakpoint) {
      padding: $as-md $as-md;
    }
    &.full {
      padding: unset;
      max-width: unset;
    }
  }
}

// Site Navbar
#navbar {
  position: fixed;
  width: 100%;
  background: var(--navbar-bg);
  font-size: $font-size-14;
  z-index: 100;
  @extend .box-shadow;
  @extend .backdrop-blur;
  @media (max-width: $mobile-breakpoint) {
    max-height: 100vh;
    overflow-y: auto;
  }

  .container {
    display: flex;
    padding: $as-sm $as-lg;
    @media (max-width: $mobile-breakpoint) {
      flex-direction: column;
      padding: $as-sm $as-sm;
    }
  }

  #navbar-collapse {
    width: 100%;
    display: flex;
    justify-content: flex-end;
    // justify-content: space-between;
    font-weight: 600;
    @media (max-width: $mobile-breakpoint) {
      flex-direction: column;
      justify-content: flex-start;
      width: unset;
    }
  }

  #navbar-check {
    display: none;
    @media (max-width: $mobile-breakpoint) {
      &:not(:checked) ~ #navbar-collapse {
        // display: none;
        height: 0;
        overflow: hidden;
      }
      &:checked ~ #navbar-collapse {
        display: flex;
        overflow-y: auto;
        height: unset;
      }
    }
  }

  .header {
    display: flex;
    height: $navbar-item-height;
    @media (max-width: $mobile-breakpoint) {
      justify-content: space-between;
    }
    label.toggle {
      display: none;
      align-items: center;
      font-size: 3em;
      color: var(--body-content);
      &:hover {
        cursor: pointer;
      }
      @media (max-width: $mobile-breakpoint) {
        display: flex;
      }
    }
    img.logo {
      height: $navbar-item-height;
    }
  }

  ul.navbar-nav {
    @include ul-reset;
    display: flex;
    position: relative;
    padding: 0 $as-md;
    z-index: 100;
    @media (max-width: $mobile-breakpoint){
      flex-direction: column;
      padding: 0;
    }

    > li.nav-item {
      position: relative;
      margin-right: $as-xs;
      &:last-child {
        margin-right: unset;
      }
      @media (max-width: $mobile-breakpoint) {
        margin: 0 0 8px 0;
      }
    }

    li.nav-item a {
      display: flex;
      // line-height: $navbar-item-height;
      line-height: 1rem;
      padding: ($navbar-item-height - 1rem)/2 $as-md;
      @extend .button-highlight-neutral;
      @extend .rounded-sm;
    }
    li.nav-item.active > a {
      &:before {
        content: " > ";
      }
    }
    li.dropdown {
      display: inline-block;
    }
    ul.dropdown-menu {
      @include ul-reset();
      display: none;
      position: absolute;
      z-index: 1;
      background: var(--fbg-100);
      border: solid 1px var(--fbg-200);
      min-width: 10rem;
      padding: $as-sm;
      left: 50%;
      right: auto;
      transform: translate(-50%, 0);
      @extend .box-shadow;
      @extend .rounded-sm;
      @extend .backdrop-blur;
      li.nav-item a {
        @extend .rounded-xs;
      }
      @media (max-width: $mobile-breakpoint) {
        position: relative;
        padding-left: $as-sm;
        margin: $as-xxs $as-xs;
        left: unset;
        transform: unset;
      }
      a {
        display: block;
      }
    }
    li.dropdown:hover .dropdown-menu {
      display: flex;
      flex-direction: column;
    }

  }

  .search-form {
    position: relative;
    display: flex;
    @media (max-width: $mobile-breakpoint) {
      padding: 8px 0;
      margin: 8px 0;
      border-left: none;
      border-right: none;
      flex-direction: column;
      order: -1;
    }
  }

  #navbar-search-input {
    margin: 0;
    padding: 0 $as-md;
    border: none;
    min-height: $navbar-item-height;
    color: var(--body-content);
    background: var(--fbg-200);
    outline: none;
    @extend .transition;
    @extend .rounded-sm;
    @media (min-width: $mobile-breakpoint) {
      width: $aside-width/2;
      &:focus {
        width: $aside-width * 1.2;
      }
    }
    ~ * #navbar-search-results { 
      display: block;
    }
    &:focus {
      background: var(--fbg-400);
      & ~ ul.navbar-nav {
        display: none;
      }
      ~ * #navbar-search-results { 
        display: block;
      }
    }
  }

  .search-results {
    position: relative;
    // background: #{$color-deep};
    background: var(--navbar-bg);
    z-index: 50;
    max-height: 70vh;
    width: 100%;
    overflow-y: auto;
    @extend .box-shadow;
    @extend .rounded-xs;
    @extend .backdrop-blur;
    @media (min-width: $mobile-breakpoint) {
      position: absolute;
      top: #{$navbar-item-height + $as-sm};
      right: 0;
      min-width: $aside-width * 1.2 + $as-md + $as-md;
    }
    @media (max-width: $mobile-breakpoint) {
      margin: $as-xxs $as-xs;
      width: unset;
    }
    
  }

  #navbar-search-results {
    @include ul-reset;

    li {
      line-height: 1.5em;
      margin: $as-xs;
      h4 {
        font-weight: 600;
        margin: 0;
      }
      small {
        color: var(--secondary);
        opacity: 0.75;
      }
      a {
        display: block;
        padding: $as-xs;
        background: var(--fbg-100);
        @extend .backdrop-blur;
        @extend .rounded-xs;
        &:hover {
          background: var(--fbg-300);
          h4 {
            color: var(--color-link);
          }
          small {
            opacity: unset;
          }
        }
      }
    }
  }

}

main .container {
  display: flex;
  @media (max-width: $mobile-breakpoint) {
    flex-direction: column;
  }
}

.page-content {
  min-width: $body-min-width;
  flex-grow: 1;
  padding: 0;
  // background: var(--primary);
  @media (min-width: $mobile-breakpoint) { 
    padding: $as-sm;
   }
}

main aside {
  flex: 0 0 $aside-width;
  @media (min-width: $mobile-breakpoint) {
    align-self: flex-start;
    position: sticky;
    min-width: $aside-width;
    // top: $as-lg;
    top: $navbar-item-height + $as-sm + $as-md + $as-sm;
    overflow-y: auto;
  }
  a {
    // color: inherit;
    word-wrap: break-word;
  }
  h3 {
    font-weight: 600;
  }
}


main section {
  margin-bottom: $as-md;
  nav {
    // width: $aside-width;
  }
}

section.menu {
  background: unset;
  border-right: solid 1px grey;
}

#aside-b {
  @media (max-width: $mobile-breakpoint) {
    order: -1;
    flex: unset;
  }
}

section.toc, section.git-info {
  display: block;
  padding: $as-sm;
  font-size: $font-size-12;
  @extend .rounded-sm;
  nav {
    @media (min-width: $mobile-breakpoint) {
      max-height: 65vh ;
      overflow-y: auto;
    }
  }
  background: var(--fbg-200);
  &:hover {
    background: var(--fbg-300);
  }
}

#toc-control {
  label#toc-check {
    display: block;
  }
  @media (max-width: $mobile-breakpoint) {
    &:not(:checked) ~ nav#TableOfContents {
      height: 0;
      overflow: hidden;
    }
    &:checked ~ nav#TableOfContents {
      height: inherit;
      overflow-y: auto;
    }
    &:not(:checked) ~ * #toc-check {
      position: relative;
    }
    &:checked ~ * #toc-icon {
      transform: rotate(180deg);
    }
  }
}

#toc-icon {
  @media (min-width: $mobile-breakpoint) {
    display: none;
  }
}

section.git-info {
  display: flex;
  justify-content: space-between;
  @media (max-width: $mobile-breakpoint) {
    flex-direction: column;
    column-gap: 12px;
    a {
      text-align: center;
      padding: $as-xs;
    }
  }
}

aside nav ul {
  @include ul-reset();

  li {
    margin: $as-xxs 0;
    position: relative;
  }

  a {
    display: block;
    padding: $as-xxs;
    @extend .rounded-xxs;
  }

  a:hover {
    opacity: 0.5;
  }

  ul {
    padding-inline-start: $as-xs;
  }
}


footer#site-footer {
  color: var(--footer-content);
  background: var(--footer-bg);
  font-size: $font-size-14;
  .container {
    display: flex;
    flex-direction: row;
    flex-grow: 1;
    padding: $as-lg $as-lg;
    flex-wrap: wrap;
    @media (max-width: $mobile-breakpoint) {
      flex-direction: column;
      padding: $as-md $as-md;
    }
    &.full {
      padding: unset;
      max-width: unset;
    }
    .brand {
      flex-grow: 1;
      max-width: $aside-width * 2;
      @media (max-width: $mobile-breakpoint) { 
        max-width: unset;
      }

    }
    .social-icons {
      font-size: x-large;
      margin: $as-sm 0;
      a {
        color: white;
        margin: 0 $as-xxs;
      }
    }
    
    aside {
      margin: $as-sm 0;
      @media (min-width: $mobile-breakpoint) {
        margin: 0 $as-sm;
      }
    }
    ul {
      @include ul-reset();
      li {
        padding: $as-xs 0;
        a {
          color: white;
        }
      }
    }
    row {
      width: 100%;
    }
  }
  
}

#breadcrumb {
  padding: $as-sm $as-sm 0 $as-sm;
  width: 100%;
  @media (max-width: $mobile-breakpoint) {
    padding: $as-md 0 0 0;
  }
  span {
    @media (max-width: $mobile-breakpoint) {
      font-size: $font-size-12;
    }
    a {
      color: var(--body-content);
      opacity: 0.75;
    }
    &:before {
      content: "/";
      opacity: 0.2;
      margin: auto $as-xxs;
    }
    &:first-child::before {
      content: "";
      margin: unset;
    }
    &.active a {
      opacity: 0.5;
    }
    &:hover a {
      text-decoration: underline;
      opacity: unset;
    }
    &:hover::before {
      opacity: 0.75;
    }
  }
  * a {
    @extend .transition-color;
  }
  
}